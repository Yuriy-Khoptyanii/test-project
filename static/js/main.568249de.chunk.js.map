{"version":3,"sources":["components/goodsList/GoodsListSlice.slice.ts","store.ts","components/header/Header.tsx","App.tsx","components/searchField/SearchField.tsx","components/goodListTable/TableDeleteButton.tsx","components/goodListTable/GoodListTable.tsx","components/goodsList/GoodsList.tsx","pages/homePage/HomePage.tsx","components/formToAdd/FormToAdd.tsx","pages/addNewGoods/AddNewGoods.tsx","index.tsx"],"names":["goodsSlice","createSlice","name","initialState","items","isFirstLoading","reducers","addProduct","state","action","push","payload","updateProduct","id","updates","map","product","deleteProduct","filter","el","setGoods","setLoading","actions","store","configureStore","reducer","goods","goodsSliceReducer","Header","memo","className","to","isActive","cn","App","SearchField","nameSearch","setNameChange","data-cy","type","placeholder","value","onChange","event","target","aria-hidden","onClick","TableDeleteButton","row","dispatch","useDispatch","IconButton","aria-label","size","fontSize","columns","header","accessorKey","cell","rowInfo","original","src","images","alt","accessorFn","GoodListTable","data","useState","sorting","setSorting","table","useReactTable","onSortingChange","getCoreRowModel","getSortedRowModel","debugTable","getHeaderGroups","headerGroup","headers","colSpan","isPlaceholder","column","getCanSort","getToggleSortingHandler","flexRender","columnDef","getContext","asc","desc","getIsSorted","getRowModel","rows","getVisibleCells","style","verticalAlign","GoodsList","isLoading","setIsLoading","useSelector","first","console","log","useEffect","fetch","then","response","json","finalGoods","products","title","description","price","rating","stock","category","visibleGoods","prod","toLowerCase","includes","HomePage","setNameSearch","FormToAdd","validationSchema","Yup","required","url","initialValues","onSubmit","values","resetForm","isSubmitting","disabled","AddNewGoods","ReactDOM","render","path","element","replace","index","document","getElementById"],"mappings":"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","file":"static/js/main.568249de.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Product } from '../../types/Product';\n\nexport interface GoodsState {\n  items: Product[],\n  isFirstLoading: boolean,\n}\n\nconst initialState: GoodsState = {\n  items: [],\n  isFirstLoading: true,\n};\n\nexport const goodsSlice = createSlice({\n  name: 'goods',\n  initialState,\n  reducers: {\n    addProduct: (state, action) => {\n      state.items.push(action.payload);\n    },\n\n    updateProduct: (state, action) => {\n      const { id, updates } = action.payload;\n      const items = state.items.map((product) => {\n        if (product.id === id) {\n          return { ...product, ...updates };\n        }\n\n        return product;\n      });\n\n      return { ...state, items };\n    },\n\n    deleteProduct: ((state, action) => {\n      state.items = state.items.filter(el => el.id !== action.payload);\n    }),\n\n    setGoods: (state, action) => {\n      state.items = action.payload;\n    },\n\n    setLoading: (state, action) => {\n      state.isFirstLoading = action.payload;\n    },\n  },\n});\n\nexport const {\n  addProduct,\n  updateProduct,\n  deleteProduct,\n  setGoods,\n  setLoading,\n} = goodsSlice.actions;\n\nexport default goodsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport goodsSliceReducer from './components/goodsList/GoodsListSlice.slice';\n\nexport const store = configureStore({\n  reducer: {\n    goods: goodsSliceReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\nimport cn from 'classnames';\n\nexport const Header: React.FC = memo(() => {\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => cn('link__item', {\n            'is-active': isActive,\n          })}\n        >\n          Home Page\n        </NavLink>\n\n        <NavLink\n          to=\"addNewGoods\"\n          className={({ isActive }) => cn('link__item', {\n            'is-active': isActive,\n          })}\n        >\n          Add goods\n        </NavLink>\n      </nav>\n    </header>\n  );\n});\n","import React from 'react';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from './components/header/Header';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n\n      <main className=\"main\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport './SearchField.scss';\n\ntype Props = {\n  nameSearch: string;\n  setNameChange: (value: string) => void;\n};\n\nexport const SearchField: React.FC<Props> = memo(({ nameSearch, setNameChange }) => {\n  return (\n    <div className=\"input-search\">\n      <p className=\"control has-icons-left has-icons-right\">\n        <input\n          data-cy=\"SearchField\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search\"\n          value={nameSearch}\n          onChange={(event) => setNameChange(event.target.value)}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n\n        {nameSearch && (\n          <span className=\"icon is-right\">\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setNameChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Product } from '../../types/Product';\nimport { deleteProduct } from '../goodsList/GoodsListSlice.slice';\n\ntype Props = {\n  row: Product;\n};\n\nexport const TableDeleteButton: React.FC<Props> = memo(({ row }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={() => dispatch(deleteProduct(row.id))}\n      aria-label=\"delete\"\n      size=\"large\"\n    >\n      <DeleteIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable react/jsx-key */\nimport React, { useState } from 'react';\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { Product } from '../../types/Product';\nimport { TableDeleteButton } from './TableDeleteButton';\nimport './GoodListTable.scss';\n\ntype Props = {\n  data: Product[],\n};\n\nconst columns: ColumnDef<Product>[] = [\n  {\n    header: 'ID',\n    accessorKey: 'id',\n  },\n  {\n    header: 'Title',\n    accessorKey: 'title',\n  },\n  {\n    header: 'Description',\n    accessorKey: 'description',\n  },\n  {\n    header: 'Price',\n    accessorKey: 'price',\n  },\n  {\n    header: 'Images',\n    accessorKey: 'images',\n    cell: ({ row }) => {\n      const rowInfo = row.original;\n\n      return (\n        <img\n          className=\"prodImg\"\n          src={\n            typeof rowInfo.images !== 'string' ? rowInfo.images[0] : rowInfo.images\n          }\n          alt=\"img\"\n        />\n      );\n    },\n  },\n  {\n    header: 'Rating',\n    accessorKey: 'rating',\n  },\n  {\n    header: 'Stock',\n    accessorKey: 'stock',\n  },\n  {\n    header: 'Category',\n    accessorKey: 'category',\n  },\n  {\n    header: 'Delete',\n    accessorFn: (row) => row,\n    cell: ({ row }) => {\n      const rowInfo = row.original;\n\n      return <TableDeleteButton row={rowInfo} />;\n    },\n  },\n];\n\nexport const GoodListTable: React.FC<Props> = ({ data }) => {\n  const [sorting, setSorting] = useState<SortingState>([]);\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n\n  return (\n    <div className=\"box\">\n      <table className=\"table\">\n        <thead>\n          {table.getHeaderGroups().map(headerGroup => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n                return (\n                  <th key={header.id} colSpan={header.colSpan}>\n                    {header.isPlaceholder ? null : (\n                      <div className=\"table-header\">\n                        <div\n                          {...{\n                            className: header.column.getCanSort()\n                              ? 'cursor-pointer select-none'\n                              : '',\n                            onClick: header.column.getToggleSortingHandler(),\n                          }}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext(),\n                          )}\n                          {{\n                            asc: ' ▲',\n                            desc: ' ▼',\n                          }[header.column.getIsSorted() as string] ?? null}\n                        </div>\n                      </div>\n                    )}\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows\n            .map((row: { id: React.Key | null | undefined; getVisibleCells: () => any[]; }) => {\n              return (\n                <tr key={row.id}>\n                  {row.getVisibleCells().map(cell => {\n                    return (\n                      <td\n                        key={cell.id}\n                        style={{ verticalAlign: 'middle' }}\n                      >\n                        <div className=\"table-row\">\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext(),\n                          )}\n                        </div>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { memo, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGoods, setLoading } from './GoodsListSlice.slice';\nimport { GoodListTable } from '../goodListTable/GoodListTable';\nimport type { RootState } from '../../store';\nimport { Product } from '../../types/Product';\n\ntype Props ={\n  nameSearch: string,\n};\n\ntype Data = {\n  limit: number;\n  products: Product[];\n  skip: number;\n  total: number;\n};\n\nexport const GoodsList: React.FC<Props> = memo(({ nameSearch }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const goods: Product[] = useSelector((state: RootState) => state.goods.items);\n  const first = useSelector((state: RootState) => state.goods.isFirstLoading);\n\n  console.log({ first, goods });\n\n  useEffect(() => {\n    if (first) {\n      setIsLoading(true);\n      fetch('https://dummyjson.com/products')\n        .then((response) => response.json())\n        .then((data: Data) => {\n          const finalGoods = data.products.map(({\n            id, title, description, price, images, rating, stock, category,\n          }) => {\n            return {\n              id, title, description, price, images, rating, stock, category,\n            };\n          });\n\n          dispatch(setGoods(finalGoods));\n          setIsLoading(false);\n          dispatch(setLoading(false));\n        });\n    }\n  }, [goods]);\n\n  const visibleGoods = goods.filter(prod => (\n    prod.title.toLowerCase().includes(nameSearch.toLowerCase())\n        || prod.category.toLowerCase().includes(nameSearch.toLowerCase())));\n\n  return (\n    <>\n      {isLoading\n        ? <p>Data is Loading...</p>\n        : <GoodListTable data={visibleGoods} />}\n    </>\n  );\n});\n","/* eslint-disable no-console */\nimport React, { memo, useState } from 'react';\n\nimport { SearchField } from '../../components/searchField/SearchField';\nimport { GoodsList } from '../../components/goodsList/GoodsList';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = memo(() => {\n  const [nameSearch, setNameSearch] = useState('');\n\n  const setNameChange = (value: string) => {\n    console.log({ value });\n    setNameSearch(value);\n  };\n\n  return (\n    <div className=\"homePage\">\n      <SearchField\n        nameSearch={nameSearch}\n        setNameChange={setNameChange}\n      />\n      <GoodsList nameSearch={nameSearch} />\n    </div>\n  );\n});\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport {\n  Formik, Form, Field, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from '../goodsList/GoodsListSlice.slice';\nimport './FormToAdd.scss';\nimport { Product } from '../../types/Product';\n\ntype InitialValue = {\n  id: string,\n  title: string,\n  description: string,\n  price: string,\n  images: string,\n  rating: string,\n  stock: string,\n  category: string,\n};\n\nexport const FormToAdd = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValue = {\n    id: '',\n    title: '',\n    description: '',\n    price: '',\n    images: '',\n    rating: '',\n    stock: '',\n    category: '',\n  };\n\n  const validationSchema = Yup.object({\n    id: Yup.string().required('Required'),\n    title: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    price: Yup.number().required('Required'),\n    images: Yup.string().url().required('Required'),\n    rating: Yup.number().required('Required'),\n    stock: Yup.number().required('Required'),\n    category: Yup.string().required('Required'),\n  });\n\n  const onSubmit = (values: InitialValue | Product, { resetForm }: { resetForm: () => void }) => {\n    dispatch(addProduct(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form className=\"form\">\n          <div className=\"form-row\">\n            <Field placeholder=\"id\" className=\"form-field\" type=\"text\" id=\"id\" name=\"id\" />\n            <div className=\"error-message\"><ErrorMessage name=\"id\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"title\" className=\"form-field\" type=\"text\" id=\"title\" name=\"title\" />\n            <div className=\"error-message\"><ErrorMessage name=\"title\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"description\" className=\"form-field\" type=\"text\" id=\"description\" name=\"description\" />\n            <div className=\"error-message\"><ErrorMessage name=\"description\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"price\" className=\"form-field\" type=\"number\" id=\"price\" name=\"price\" />\n            <div className=\"error-message\"><ErrorMessage name=\"price\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"images\" className=\"form-field\" type=\"text\" id=\"images\" name=\"images\" />\n            <div className=\"error-message\"><ErrorMessage name=\"images\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"rating\" className=\"form-field\" type=\"number\" id=\"rating\" name=\"rating\" />\n            <div className=\"error-message\"><ErrorMessage name=\"rating\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"stock\" className=\"form-field\" type=\"number\" id=\"stock\" name=\"stock\" />\n            <div className=\"error-message\"><ErrorMessage name=\"stock\" /></div>\n          </div>\n          <div className=\"form-row\">\n            <Field placeholder=\"category\" className=\"form-field\" type=\"text\" id=\"category\" name=\"category\" />\n            <div className=\"error-message\"><ErrorMessage name=\"category\" /></div>\n          </div>\n          <button\n            className=\"bottom\"\n            type=\"submit\"\n            disabled={isSubmitting}\n          >\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { memo } from 'react';\nimport { FormToAdd } from '../../components/formToAdd/FormToAdd';\n\nexport const AddNewGoods: React.FC = memo(() => (\n  <>\n    <FormToAdd />\n  </>\n));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { App } from './App';\nimport { HomePage } from './pages/homePage/HomePage';\nimport { AddNewGoods } from './pages/addNewGoods/AddNewGoods';\nimport './index.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"addNewGoods\" element={<AddNewGoods />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}